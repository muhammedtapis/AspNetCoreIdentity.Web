
@{
    ViewData["Title"] = "RoleUpdate";
}
@model AdminModel.RoleUpdateViewModel
<h1>RoleUpdate</h1>

<div class="row">
    <div class="col-md-6 offset-md-3">
        <h2>Rol Güncelleme</h2>
        @if (ViewData["SuccessMessage"] != null) //eğer ki ViewBag.SuccessMessage boş değilse yada tempdata
        {
            <div class="alert alert-info" role="alert">
                @ViewData["SuccessMessage"]
            </div>
        }
        <form asp-action="RoleUpdate" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>  <!-- Bu alanda controllerdan gelen model hataları olacak-->

            <input type="hidden" asp-for="Id"/> <!--Bu sayfanın get methodunda güncellemek istediğimiz rol için id parametresi tutmamız gerekiyor.get methodda parametreydi.-->

            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group mt-3">
                <input type="submit" value="Güncelle" class="btn btn-primary" />
            </div>
        </form>
        <div class="mt-3">
            <a class="btn btn-secondary"asp-action="Index">Rol Listesine Geri Dön</a>
        </div>
    </div>

</div>



@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
